name: CI/CD

on:
  pull_request_target:
    branches:
      - main
  merge_group:
  push:
    branches:
      - main


permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  ci-check:
    name: CI Check
    runs-on: ubuntu-latest
    outputs:
      affected-projects: ${{ steps.affected.outputs.projects }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup project
        uses: ./.github/actions/setup-project
        with:
          node-version: 20
          dependencies: true
          install-playwright: true
          playwright-browsers: chromium
      - name: Run tests
        uses: coactions/setup-xvfb@v1
        with:
          run: npm run test:ci

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: ci-check
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4
        with:
          token: ${{ secrets.GH_BOT_TOKEN }}
          config-file: release-config.json
          manifest-file: release-manifest.json
      - name: Setup project
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        uses: ./.github/actions/setup-project
        with:
          node-version: 20
          dependencies: true
      - name: Build
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        run: |
          npm run build:prod
          mv dist ${{ github.event.repository.name }}
          zip -r extension.zip ${{ github.event.repository.name }}
      - name: Upload release assets
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: extension.zip
          asset_name: extension.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
